name: Ant

on:
#  schedule:
#    - cron: "0 18 * * 1-5"
#  push:
#    branches:
#      - master
#    tags:
#      - 'v*'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Launch reason'
        required: true
        default: 'Run unit test'

jobs:
  ubuntu-job:
    runs-on: [ubuntu-18.04]
    steps:
    - name: Installing Golang
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.1
    - name: Install base dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y autoconf automake gcc make wget unzip gettext default-jdk libxml2-dev libssl-dev libcurl4-openssl-dev libsnmp-dev libevent-dev libsqlite3-dev libpcre2-dev libssh2-1-dev libopenipmi-dev unixodbc-dev libldap2-dev libgnutls28-dev libpcre3-dev libssh-dev
        sudo apt-get install -y ant ant-contrib phpunit cppcheck golang clang clang-tools lcov libcmocka-dev libyaml-dev libyaml-libyaml-perl libpath-tiny-perl libipc-run3-perl
        sudo apt-get install -y libmysqlclient-dev libpq-dev
        sudo wget https://github.com/sass/dart-sass/releases/download/1.39.2/dart-sass-1.39.2-linux-x64.tar.gz -O /tmp/dart-sass-linux-x64.tar.gz
        sudo tar -zxf /tmp/dart-sass-linux-x64.tar.gz -C /tmp && yes | sudo cp /tmp/dart-sass/sass /usr/local/sbin && sudo rm -rf /tmp/dart-sass dart-sass-linux-x64.tar.gz
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Bootstrap
      run: ./bootstrap.sh
    - name: Get current Zabbix version
      run: echo "ZABBIX_VERSION=$(cat configure | grep PACKAGE_VERSION= | cut -d = -f2 | tr -d \')" >> $GITHUB_ENV
    - name: Run backend build tests with Zabbix-agent 2...
      run: ant -f build-backend.xml agent2-tests
    - name: Cleanup
      run: |
        rm -rf ./sources
        rm -rf ./zabbix-${ZABBIX_VERSION}
    - name: Run backend build tests with MySQL...
      run: ant -DDBTYPE=MYSQL -f build-backend.xml
    - name: Cleanup
      run: |
        rm -rf ./sources
        rm -rf ./zabbix-${ZABBIX_VERSION}
    - name: Run backend build tests with PostgreSQL...
      run: ant -DDBTYPE=POSTGRESQL -f build-backend.xml
    - name: Cleanup
      run: |
        rm -rf ./sources
        rm -rf ./zabbix-${ZABBIX_VERSION}
#    - name: Run backend build tests with Oracle...
#      run: ant -DDBTYPE=ORACLE -f build-backend.xml
#    - name: Cleanup
#      run: |
#        rm -rf ./sources
#        rm -rf ./zabbix-${ZABBIX_VERSION}
#    - name: Run backend test cppcheck-static-analyzer...
#      run: ant -f build-backend.xml cppcheck-static-analyzer
#    - name: Cleanup
#      run: |
#        rm -rf ./sources
#        rm -rf ./zabbix-${ZABBIX_VERSION}
#    - name: Run backend test clang-static-analyzer...
#      run: ant -f build-backend.xml clang-static-analyzer
#    - name: Cleanup
#      run: |
#        rm -rf ./sources
#        rm -rf ./zabbix-${ZABBIX_VERSION}
    - name: Run backend test cmocka-tests...
      run: ant -f build-backend.xml cmocka-tests
    - name: Cleanup
      run: |
        rm -rf ./sources
        rm -rf ./zabbix-${ZABBIX_VERSION}
#    - name: Run backend test cmocka-ora-tests...
#      run: ant -f build-backend.xml cmocka-ora-tests
